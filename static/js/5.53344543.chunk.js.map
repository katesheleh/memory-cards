{"version":3,"sources":["components/Registration/Registration.module.scss","components/Registration/Registration.tsx"],"names":["module","exports","validationSchema","Yup","email","required","password","min","repeatPassword","React","memo","isRegistered","useSelector","state","registration","errorMsg","request","error","dispatch","useDispatch","formik","useFormik","initialValues","onSubmit","values","payload","registrationTC","to","LOGIN","className","classes","container","handleSubmit","formItem","labelTitle","errors","getFieldProps","type","disabled"],"mappings":"uGACAA,EAAOC,QAAU,CAAC,UAAY,gCAAgC,SAAW,iC,iCCDzE,4GAcMC,EAAmB,kBAAMC,IAAW,CACvCC,MAAOD,MACHC,MAAM,yBACNC,SAAS,YACbC,SAAUH,MACNE,SAAS,YACTE,IAAI,EAAG,gCACXC,eAAgBL,MACZE,SAAS,YACTE,IAAI,EAAG,mCAmECE,cAAMC,MAhEA,WAClB,IAAMC,EAAeC,aAAuC,SAAAC,GAAK,OAAIA,EAAMC,aAAaH,gBAClFI,EAAWH,aAAsC,SAAAC,GAAK,OAAIA,EAAMG,QAAQC,SACxEC,EAAWC,cAEXC,EAASC,YAAU,CACtBC,cAAe,CACZlB,MAAO,GACPE,SAAU,GACVE,eAAgB,IAEnBN,mBACAqB,SAAU,SAAAC,GACP,IAAMC,EAAU,CACbrB,MAAOoB,EAAOpB,MACdE,SAAUkB,EAAOlB,UAEpBY,EAASQ,YAAeD,OAI9B,OAAId,EACM,kBAAC,IAAD,CAAUgB,GAAIC,MAIrB,yBAAKC,UAAWC,IAAQC,WAEpBhB,GAAY,2BAAG,gCAASA,IAEzB,4CAEA,0BAAMQ,SAAUH,EAAOY,cAEpB,yBAAKH,UAAWC,IAAQG,UACrB,kBAAC,IAAD,eAAOC,WAAY,gBACZjB,MAAOG,EAAOe,OAAO/B,OACjBgB,EAAOgB,cAAc,YAGnC,yBAAKP,UAAWC,IAAQG,UACrB,kBAAC,IAAD,eACGC,WAAY,WACZG,KAAK,WACLpB,MAAOG,EAAOe,OAAO7B,UACjBc,EAAOgB,cAAc,eAG/B,yBAAKP,UAAWC,IAAQG,UACrB,kBAAC,IAAD,eAAOC,WAAY,kBACZG,KAAK,WACLpB,MAAOG,EAAOe,OAAO3B,gBACjBY,EAAOgB,cAAc,qBAGnC,kBAAC,IAAD,CACGF,WAAY,SACZG,KAAK,SACLC,SAAUlB,EAAOI,OAAOlB,WAAac,EAAOI,OAAOhB","file":"static/js/5.53344543.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Registration_container__1WWYN\",\"formItem\":\"Registration_formItem__hc5wo\"};","import React from 'react'\r\nimport classes from './Registration.module.scss'\r\nimport {Redirect} from 'react-router-dom'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {AppRootStateType} from '../../reducers/store'\r\nimport {LOGIN} from '../../route'\r\nimport Preloader from '../common/Preloader/Preloader'\r\nimport {registrationTC} from '../../reducers/registration-reducer'\r\nimport {useFormik} from 'formik'\r\nimport Input from '../common/Input/Input'\r\nimport Button from '../common/Button/Button'\r\nimport * as Yup from 'yup'\r\n\r\n\r\nconst validationSchema = () => Yup.object({\r\n   email: Yup.string()\r\n      .email('Invalid email address')\r\n      .required('Required'),\r\n   password: Yup.string()\r\n      .required('Required')\r\n      .min(8, 'Must be 8 characters or less'),\r\n   repeatPassword: Yup.string()\r\n      .required('Required')\r\n      .min(8, 'Must be 8 characters or less'),\r\n})\r\n\r\nconst Registration = () => {\r\n   const isRegistered = useSelector<AppRootStateType, boolean>(state => state.registration.isRegistered)\r\n   const errorMsg = useSelector<AppRootStateType, string>(state => state.request.error)\r\n   const dispatch = useDispatch()\r\n\r\n   const formik = useFormik({\r\n      initialValues: {\r\n         email: '',\r\n         password: '',\r\n         repeatPassword: '',\r\n      },\r\n      validationSchema,\r\n      onSubmit: values => {\r\n         const payload = {\r\n            email: values.email,\r\n            password: values.password,\r\n         }\r\n         dispatch(registrationTC(payload))\r\n      },\r\n   })\r\n\r\n   if (isRegistered) {\r\n      return <Redirect to={LOGIN}/>\r\n   }\r\n\r\n   return (\r\n      <div className={classes.container}>\r\n\r\n         {errorMsg && <p><strong>{errorMsg}</strong></p>}\r\n\r\n         <h1>Registration</h1>\r\n\r\n         <form onSubmit={formik.handleSubmit}>\r\n\r\n            <div className={classes.formItem}>\r\n               <Input labelTitle={'Email address'}\r\n                      error={formik.errors.email}\r\n                      {...formik.getFieldProps('email')}/>\r\n            </div>\r\n\r\n            <div className={classes.formItem}>\r\n               <Input\r\n                  labelTitle={'Password'}\r\n                  type='password'\r\n                  error={formik.errors.password}\r\n                  {...formik.getFieldProps('password')}/>\r\n            </div>\r\n\r\n            <div className={classes.formItem}>\r\n               <Input labelTitle={'Repeat Password'}\r\n                      type='password'\r\n                      error={formik.errors.repeatPassword}\r\n                      {...formik.getFieldProps('repeatPassword')}/>\r\n            </div>\r\n\r\n            <Button\r\n               labelTitle={'Submit'}\r\n               type=\"submit\"\r\n               disabled={formik.values.password !== formik.values.repeatPassword}/>\r\n         </form>\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default React.memo(Registration)\r\n"],"sourceRoot":""}