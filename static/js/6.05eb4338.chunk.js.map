{"version":3,"sources":["components/RestorePassword/RestorePassword.module.scss","components/RestorePassword/RestorePassword.tsx"],"names":["module","exports","validationSchema","Yup","email","required","React","memo","dispatch","useDispatch","success","useSelector","state","restorePsw","selectedEmail","errorMsg","request","error","formik","useFormik","initialValues","onSubmit","values","getEmailConfirmation","className","classes","container","style","color","marginBottom","href","handleSubmit","inputWrapper","labelTitle","errors","getFieldProps","type","disabled"],"mappings":"uGACAA,EAAOC,QAAU,CAAC,UAAY,mCAAmC,aAAe,sCAAsC,SAAW,oC,iCCDjI,6FAWMC,EAAmB,kBAAMC,IAAW,CACvCC,MAAOD,MAAaC,MAAM,yBAAyBC,SAAS,eA6ChDC,cAAMC,MA1CG,WAErB,IAAMC,EAAWC,cACXC,EAAUC,aAAuC,SAAAC,GAAK,OAAIA,EAAMC,WAAWH,WAC3EI,EAAgBH,aAAsC,SAAAC,GAAK,OAAIA,EAAMC,WAAWC,iBAChFC,EAAWJ,aAAsC,SAAAC,GAAK,OAAIA,EAAMI,QAAQC,SAExEC,EAASC,YAAU,CACtBC,cAAe,CACZhB,MAAO,IAEVF,mBACAmB,SAAU,SAAAC,GACPd,EAASe,YAAqBD,EAAOlB,WAI3C,OACG,yBAAKoB,UAAWC,IAAQC,WACrB,gDACCX,GAAY,2BAAG,gCAASA,IAEtBL,GACA,yBAAKiB,MAAO,CAACC,MAAO,QAASC,aAAc,SAA3C,oBACsB,IAAI,uBAAGC,KAAI,iBAAYhB,IAAkBA,GAAmB,IADlF,gCAMH,0BAAMO,SAAUH,EAAOa,cACpB,yBAAKP,UAAWC,IAAQO,cACrB,kBAAC,IAAD,eAAOC,WAAY,SACZhB,MAAOC,EAAOgB,OAAO9B,OACjBc,EAAOiB,cAAc,YAGnC,kBAAC,IAAD,CAAQC,KAAK,SAASH,WAAY,OAAQI,WAAYnB,EAAOgB,OAAO9B","file":"static/js/6.05eb4338.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"RestorePassword_container__3FtFz\",\"inputWrapper\":\"RestorePassword_inputWrapper__2hddw\",\"errorMsg\":\"RestorePassword_errorMsg__1XU_O\"};","import React from 'react'\r\nimport classes from './RestorePassword.module.scss'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {getEmailConfirmation} from '../../reducers/restorePassword-reducer'\r\nimport {AppRootStateType} from '../../reducers/store'\r\nimport {useFormik} from 'formik'\r\nimport Input from '../common/Input/Input'\r\nimport Preloader from '../common/Preloader/Preloader'\r\nimport Button from '../common/Button/Button'\r\nimport * as Yup from 'yup'\r\n\r\nconst validationSchema = () => Yup.object({\r\n   email: Yup.string().email('Invalid email address').required('Required'),\r\n})\r\n\r\nconst RestorePassword = () => {\r\n\r\n   const dispatch = useDispatch()\r\n   const success = useSelector<AppRootStateType, boolean>(state => state.restorePsw.success)\r\n   const selectedEmail = useSelector<AppRootStateType, string>(state => state.restorePsw.selectedEmail)\r\n   const errorMsg = useSelector<AppRootStateType, string>(state => state.request.error)\r\n\r\n   const formik = useFormik({\r\n      initialValues: {\r\n         email: '',\r\n      },\r\n      validationSchema,\r\n      onSubmit: values => {\r\n         dispatch(getEmailConfirmation(values.email))\r\n      },\r\n   })\r\n\r\n   return (\r\n      <div className={classes.container}>\r\n         <h1>Restore password</h1>\r\n         {errorMsg && <p><strong>{errorMsg}</strong></p>}\r\n         {\r\n            success &&\r\n            <div style={{color: 'green', marginBottom: '10px'}}>\r\n                Check your email:{' '}<a href={`mailto:${selectedEmail}`}>{selectedEmail}</a>{' '}\r\n                and follow the link in there\r\n            </div>\r\n         }\r\n\r\n         <form onSubmit={formik.handleSubmit}>\r\n            <div className={classes.inputWrapper}>\r\n               <Input labelTitle={'Email:'}\r\n                      error={formik.errors.email}\r\n                      {...formik.getFieldProps('email')}/>\r\n            </div>\r\n\r\n            <Button type=\"submit\" labelTitle={'send'} disabled={!!formik.errors.email}/>\r\n         </form>\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default React.memo(RestorePassword)\r\n"],"sourceRoot":""}